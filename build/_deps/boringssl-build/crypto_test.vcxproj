<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{4381D921-8327-32F2-8AFC-8008F0D4263B}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>crypto_test</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\crypto_test.dir\nasm.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Code\GNearby\GNearbyCmake\GNearby\build\output\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">crypto_test.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">crypto_test</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">crypto_test.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">crypto_test</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">crypto_test.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">crypto_test</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">crypto_test.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">crypto_test</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) -utf-8</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4100;4127;4244;4267;4706</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <UseFullPaths>false</UseFullPaths>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <NASM>
      <IncludePaths>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include\;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include\;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include\;%(IncludePaths)</IncludePaths>
      <AdditionalOptions>-gcv8</AdditionalOptions>
      <Outputswitch>1</Outputswitch>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);BORINGSSL_DISPATCH_TEST</PreprocessorDefinitions>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
    </NASM>
    <Midl>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/crypto
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/Debug/crypto_test.exe D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/crypto
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>Debug\test_support_lib.lib;Debug\boringssl_gtest.lib;crypto\Debug\crypto.lib;ws2_32.lib;dbghelp.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/Debug/crypto_test.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/Debug/crypto_test.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) -utf-8</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DisableSpecificWarnings>4100;4127;4244;4267;4706</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <UseFullPaths>false</UseFullPaths>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <NASM>
      <IncludePaths>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include\;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include\;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include\;%(IncludePaths)</IncludePaths>
      <AdditionalOptions>-gcv8</AdditionalOptions>
      <Outputswitch>1</Outputswitch>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);BORINGSSL_DISPATCH_TEST</PreprocessorDefinitions>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
    </NASM>
    <Midl>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/crypto
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/Release/crypto_test.exe D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/crypto
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>Release\test_support_lib.lib;Release\boringssl_gtest.lib;crypto\Release\crypto.lib;ws2_32.lib;dbghelp.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/Release/crypto_test.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/Release/crypto_test.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) -utf-8</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DisableSpecificWarnings>4100;4127;4244;4267;4706</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <UseFullPaths>false</UseFullPaths>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <NASM>
      <IncludePaths>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include\;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include\;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include\;%(IncludePaths)</IncludePaths>
      <AdditionalOptions>-gcv8</AdditionalOptions>
      <Outputswitch>1</Outputswitch>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);BORINGSSL_DISPATCH_TEST</PreprocessorDefinitions>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
    </NASM>
    <Midl>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/crypto
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/MinSizeRel/crypto_test.exe D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/crypto
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>MinSizeRel\test_support_lib.lib;MinSizeRel\boringssl_gtest.lib;crypto\MinSizeRel\crypto.lib;ws2_32.lib;dbghelp.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/MinSizeRel/crypto_test.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/MinSizeRel/crypto_test.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) -utf-8</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4100;4127;4244;4267;4706</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <UseFullPaths>false</UseFullPaths>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <NASM>
      <IncludePaths>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include\;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include\;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include\;%(IncludePaths)</IncludePaths>
      <AdditionalOptions>-gcv8</AdditionalOptions>
      <Outputswitch>1</Outputswitch>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);BORINGSSL_DISPATCH_TEST</PreprocessorDefinitions>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NDEBUG;NO_WEBRTC;BORINGSSL_DISPATCH_TEST;_HAS_EXCEPTIONS=0;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;BORINGSSL_IMPLEMENTATION;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
    </NASM>
    <Midl>
      <AdditionalIncludeDirectories>D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googlemock\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\third_party\googletest\googletest\include;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/crypto
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E copy D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/RelWithDebInfo/crypto_test.exe D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/crypto
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>RelWithDebInfo\test_support_lib.lib;RelWithDebInfo\boringssl_gtest.lib;crypto\RelWithDebInfo\crypto.lib;ws2_32.lib;dbghelp.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/RelWithDebInfo/crypto_test.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/RelWithDebInfo/crypto_test.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Code/GNearby/GNearbyCmake/GNearby -BD:/Code/GNearby/GNearbyCmake/GNearby/build --check-stamp-file D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeASM_NASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindCygwin.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindMsys.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPerl.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.27\Templates\MSBuild\nasm.props.in;D:\Code\GNearby\GNearbyCmake\GNearby\build\CMakeFiles\3.27.9\CMakeASM_NASMCompiler.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\go.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\paths.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\perlasm.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\sources.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\util\go_tests.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Code/GNearby/GNearbyCmake/GNearby -BD:/Code/GNearby/GNearbyCmake/GNearby/build --check-stamp-file D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeASM_NASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindCygwin.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindMsys.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPerl.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.27\Templates\MSBuild\nasm.props.in;D:\Code\GNearby\GNearbyCmake\GNearby\build\CMakeFiles\3.27.9\CMakeASM_NASMCompiler.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\go.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\paths.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\perlasm.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\sources.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\util\go_tests.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Code/GNearby/GNearbyCmake/GNearby -BD:/Code/GNearby/GNearbyCmake/GNearby/build --check-stamp-file D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeASM_NASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindCygwin.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindMsys.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPerl.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.27\Templates\MSBuild\nasm.props.in;D:\Code\GNearby\GNearbyCmake\GNearby\build\CMakeFiles\3.27.9\CMakeASM_NASMCompiler.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\go.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\paths.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\perlasm.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\sources.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\util\go_tests.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Code/GNearby/GNearbyCmake/GNearby -BD:/Code/GNearby/GNearbyCmake/GNearby/build --check-stamp-file D:/Code/GNearby/GNearbyCmake/GNearby/build/_deps/boringssl-build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\CMakeASM_NASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindCygwin.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindMsys.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\FindPerl.cmake;C:\Program Files\CMake\share\cmake-3.27\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.27\Templates\MSBuild\nasm.props.in;D:\Code\GNearby\GNearbyCmake\GNearby\build\CMakeFiles\3.27.9\CMakeASM_NASMCompiler.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\go.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\paths.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\cmake\perlasm.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\sources.cmake;D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\util\go_tests.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\abi_self_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\asn1\asn1_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\base64\base64_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\bio\bio_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\blake2\blake2_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\buf\buf_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\bytestring\bytestring_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\chacha\chacha_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\cipher_extra\aead_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\cipher_extra\cipher_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\compiler_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\conf\conf_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\constant_time_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\cpu_arm_linux_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\crypto_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\curve25519\ed25519_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\curve25519\spake25519_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\curve25519\x25519_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\ecdh_extra\ecdh_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\dh_extra\dh_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\digest_extra\digest_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\dsa\dsa_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\err\err_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\evp\evp_extra_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\evp\evp_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\evp\pbkdf_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\evp\scrypt_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\aes\aes_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\bn\bn_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\cmac\cmac_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\ec\ec_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\ec\p256-nistz_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\ec\p256_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\ecdsa\ecdsa_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\hkdf\hkdf_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\md5\md5_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\modes\gcm_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\rand\ctrdrbg_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\rand\fork_detect_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\service_indicator\service_indicator_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\fipsmodule\sha\sha_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\hpke\hpke_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\hmac_extra\hmac_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\hrss\hrss_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\impl_dispatch_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\keccak\keccak_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\kyber\kyber_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\lhash\lhash_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\obj\obj_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\pem\pem_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\pkcs7\pkcs7_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\pkcs8\pkcs8_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\pkcs8\pkcs12_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\poly1305\poly1305_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\pool\pool_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\rand_extra\rand_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\rand_extra\getentropy_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\refcount_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\rsa_extra\rsa_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\self_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\stack\stack_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\siphash\siphash_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\spx\spx_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\thread_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\test\file_test_gtest.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\test\gtest_main.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\trust_token\trust_token_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\x509\tab_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\x509\x509_test.cc" />
    <ClCompile Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-src\crypto\x509\x509_time_test.cc" />
    <Object Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\crypto_test_data.dir\$(Configuration)\crypto_test_data.obj" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\ZERO_CHECK.vcxproj">
      <Project>{A2EAB798-C77B-38C1-BE57-FB45A495FE27}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\boringssl_gtest.vcxproj">
      <Project>{571FCA4A-531D-3B3D-9318-707FBCF45662}</Project>
      <Name>boringssl_gtest</Name>
    </ProjectReference>
    <ProjectReference Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\crypto\crypto.vcxproj">
      <Project>{0633D675-A917-31A0-B0CC-D705A28552A9}</Project>
      <Name>crypto</Name>
    </ProjectReference>
    <ProjectReference Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\crypto_test_data.vcxproj">
      <Project>{7E7461CE-9135-3A19-A2C3-88AE2C1D2585}</Project>
      <Name>crypto_test_data</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\Code\GNearby\GNearbyCmake\GNearby\build\_deps\boringssl-build\test_support_lib.vcxproj">
      <Project>{81132980-22C2-311D-9FB8-03798CE8E303}</Project>
      <Name>test_support_lib</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="C:\Program Files\CMake\share\cmake-3.27\Templates\MSBuild\nasm.targets" />
  </ImportGroup>
</Project>